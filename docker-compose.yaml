version: "3.8"

services:
  app:
    container_name: "app"
    build: .  # for local dev you can use this option, for prod work you should take image from ECR
    # image: your-ecr.amazonaws.com/some-repo:latest
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
      - ./dumps_data:/dumps
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: always
    networks:
      fast_network:
        ipv4_address: 172.30.0.10  # Статический IP для контейнера "app"

  db:
    container_name: "db"
    image: postgres:latest
    restart: always
    volumes:
      - postgres_data1:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    networks:
      - "fast_network"

  pgadmin:
    container_name: "pgadmin"
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: always
    env_file:
      - .env
    networks:
      - "fast_network"

volumes:
  postgres_data1:
  dumps_data:

networks:
  fast_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.30.0.0/16"  # Указываем подсеть для сети
